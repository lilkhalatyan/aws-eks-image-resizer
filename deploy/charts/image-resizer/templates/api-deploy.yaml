apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.api }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.api.port }}
          env:
            - name: AWS_DEFAULT_REGION
              valueFrom: { configMapKeyRef: { name: image-resizer-config, key: AWS_DEFAULT_REGION } }
            - name: INPUT_BUCKET
              valueFrom: { configMapKeyRef: { name: image-resizer-config, key: INPUT_BUCKET } }
            - name: OUTPUT_BUCKET
              valueFrom: { configMapKeyRef: { name: image-resizer-config, key: OUTPUT_BUCKET } }
            - name: AWS_ENDPOINT
              valueFrom: { configMapKeyRef: { name: image-resizer-config, key: AWS_ENDPOINT } }
          readinessProbe:
            httpGet: { path: /healthz, port: {{ .Values.api.port }} }
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - name: http
      port: {{ .Values.api.port }}
      targetPort: {{ .Values.api.port }}
  type: ClusterIP
